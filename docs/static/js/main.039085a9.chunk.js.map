{"version":3,"sources":["App.module.css","components/Profile/Profile.module.css","components/Profile/user.png","components/Challenges/Challenge.module.css","components/ChallengeData/images/water_sample.png","components/BottomNav.js","components/Profile/Profile.js","components/Header.js","components/Login.js","components/Challenges/ChallengeCard.js","components/ChallengeData/challenges.js","components/Challenges/ChallengeList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","root","border","OptionsList","label","icon","link","classes","React","useState","value","setValue","BottomNavigation","onChange","_","newValue","navigate","showLabels","className","map","opt","BottomNavigationAction","key","props","styles","Typography","variant","align","role","aria-label","src","userImg","alt","Button","color","onClick","logout","title","AppBar","position","Toolbar","display","flex","justifyContent","alignItems","flexDirection","padding","margin","Fragment","Header","FormControl","InputLabel","htmlFor","Input","id","startAdornment","InputAdornment","type","login","theme","media","height","paddingTop","ChallengeCard","c","challenge","Card","CardHeader","avatar","Avatar","style","backgroundColor","action","IconButton","subheader","creationDate","CardMedia","image","img","CardContent","component","description","CardActions","disableSpacing","marginLeft","water_sample","width","size","startIcon","challenges","k","Tasks","App","isLoggedIn","setLogin","ChallengeList","path","Profile","BottomNav","Login","Boolean","window","location","hostname","match","createMuiTheme","palette","primary","main","deepPurple","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.039085a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"AppContent\":\"App_AppContent__3mllT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Profile_main__2yfI1\",\"user-icon\":\"Profile_user-icon__2H3um\"};","module.exports = __webpack_public_path__ + \"static/media/user.c3e7fea8.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Challenge_main__1iZuO\"};","module.exports = __webpack_public_path__ + \"static/media/water_sample.34101b16.png\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport FavoriteIcon from \"@material-ui/icons/Star\";\nimport UserIcon from \"@material-ui/icons/AccountCircle\";\nimport { navigate } from \"@reach/router\";\n\nconst useStyles = makeStyles({\n  root: {\n    border: \"1px solid lightgrey\",\n  },\n});\n\nconst OptionsList = [\n  {\n    label: \"Challenges\",\n    icon: <ListIcon />,\n    link: \"\",\n  },\n  {\n    label: \"My Tasks\",\n    icon: <FavoriteIcon />,\n    link: \"tasks\",\n  },\n  {\n    label: \"Profile\",\n    icon: <UserIcon />,\n    link: \"profile\",\n  },\n];\n\nexport default function () {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(_, newValue) => {\n        navigate(\"/\" + OptionsList[newValue].link);\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}\n    >\n      {OptionsList.map((opt) => (\n        <BottomNavigationAction\n          key={opt.label}\n          label={opt.label}\n          icon={opt.icon}\n        />\n      ))}\n    </BottomNavigation>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport styles from \"./Profile.module.css\";\nimport userImg from \"./user.png\";\nimport { Typography } from \"@material-ui/core\";\n\nexport default function (props) {\n  return (\n    <div className={styles[\"main\"]}>\n      <Typography variant=\"h6\" align=\"right\">\n        Total Rewards : 65\n        <span role=\"img\" aria-label=\"star\">\n          &#11088;\n        </span>\n      </Typography>\n      <div>\n        <img\n          className={styles[\"user-icon\"]}\n          src={userImg}\n          alt=\"user-icon\"\n        ></img>\n        <Typography variant=\"h6\" align=\"center\">\n          Keanu Reeves\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\">\n          Phd Student at CERN\n        </Typography>\n      </div>\n      <Button variant=\"contained\" color=\"primary\" onClick={props.logout}>\n        Logout\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function (props) {\n  const { title } = props;\n  return (\n    <AppBar position=\"static\">\n      <Toolbar variant=\"dense\">\n        <Typography variant=\"h6\" color=\"inherit\">\n          {title ? title : \"CitiCERN\"}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  FormControl,\n  InputLabel,\n  Input,\n  InputAdornment,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport PasswordIcon from \"@material-ui/icons/VpnKey\";\nimport Header from \"./Header\";\n\nconst useStyles = makeStyles({\n  root: {\n    border: \"1px solid lightgrey\",\n    display: \"flex\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    padding: 10,\n  },\n  margin: {\n    margin: \"10px 20px\",\n  },\n});\n\nexport default (props) => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Header />\n      <div className={classes.root}>\n        <Typography variant=\"h6\" color=\"primary\">\n          Welocme to CitiCERN App\n        </Typography>\n        <FormControl className={classes.margin}>\n          <InputLabel htmlFor=\"input-with-icon-adornment\">\n            Enter Username\n          </InputLabel>\n          <Input\n            id=\"username\"\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <AccountCircle />\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n        <FormControl className={classes.margin}>\n          <InputLabel htmlFor=\"input-with-icon-adornment\">\n            Enter Password\n          </InputLabel>\n          <Input\n            id=\"password\"\n            type=\"password\"\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <PasswordIcon />\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n        <Button variant=\"contained\" color=\"primary\" onClick={props.login}>\n          Login\n        </Button>\n      </div>\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 15,\n    border: \"1px solid lightgrey\",\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n}));\n\nexport default function ChallengeCard(props) {\n  const classes = useStyles();\n\n  const c = props.challenge;\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" style={{ backgroundColor: c.color }}>\n            {c.title ? c.title[0] : \"C\"}\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={c.title}\n        subheader={c.creationDate}\n      />\n      <CardMedia className={classes.media} image={c.img} title=\"Paella dish\" />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {c.description}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>\n        <Typography style={{ marginLeft: \"auto\" }}>\n          Rewards : 7.5\n          <span role=\"img\" aria-label=\"star\">\n            &#11088;\n          </span>\n        </Typography>\n      </CardActions>\n    </Card>\n  );\n}\n","import water_sample from \"./images/water_sample.png\";\nexport default [\n  {\n    id: \"water_sample\",\n    color: \"#2196f3\",\n    title: \"Water sample data collection\",\n    creationDate: \"June 14, 2020\",\n    img: water_sample,\n    description:\n      \"This challenge involves collection of water samples from the Thames river at certain marked locations. The water samples should be collected at every morning for a stipulated time frame. this data can be utilized for measuring water quality by pH measurements.\",\n  },\n];\n","import React from \"react\";\nimport ChallengeCard from \"./ChallengeCard\";\nimport { Typography } from \"@material-ui/core\";\nimport styles from \"./Challenge.module.css\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport challenges from \"../ChallengeData/challenges\";\n\nexport default function (props) {\n  return (\n    <div className={styles[\"main\"]}>\n      <div\n        style={{\n          width: \"90%\",\n          height: 50,\n          padding: 10,\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography variant=\"h6\">Challenges</Typography>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          size=\"small\"\n          startIcon={<AddIcon />}\n        >\n          Create\n        </Button>\n      </div>\n      <Scrollbars>\n        {challenges.map((c, k) => (\n          <ChallengeCard key={k} challenge={c} />\n        ))}\n      </Scrollbars>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Router, navigate } from \"@reach/router\";\nimport BottomNav from \"./components/BottomNav\";\nimport styles from \"./App.module.css\";\nimport Profile from \"./components/Profile/Profile\";\nimport Header from \"./components/Header\";\nimport Login from \"./components/Login\";\nimport ChallengeList from \"./components/Challenges/ChallengeList\";\n\nlet Tasks = () => <div>Tasks</div>;\n\nfunction App() {\n  const [isLoggedIn, setLogin] = React.useState(false);\n\n  const logout = () => {\n    setLogin(false);\n  };\n\n  const login = () => {\n    navigate(\"/\");\n    setLogin(true);\n  };\n\n  return (\n    <div className={styles[\"App\"]}>\n      {isLoggedIn && (\n        <React.Fragment>\n          <div className={styles[\"AppContent\"]}>\n            <Header />\n            <Router className={styles[\"AppContent\"]}>\n              <ChallengeList path=\"/\" />\n              <Tasks path=\"tasks\" />\n              <Profile path=\"profile\" logout={logout} />\n            </Router>\n          </div>\n          <BottomNav />\n        </React.Fragment>\n      )}\n      {!isLoggedIn && <Login login={login}></Login>}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport { deepPurple } from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[900],\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}