{"version":3,"sources":["components/BottomNav.js","components/Profile/Profile.js","components/Header.js","components/Login.js","components/Challenges/ChallengeCard.js","components/data/challenges.js","components/Challenges/ChallengeList.js","components/data/tasks.js","components/Tasks/Task.js","components/Tasks/TaskList.js","App.js","serviceWorker.js","index.js","components/Profile/Profile.module.css","App.module.css","components/Profile/user.png","components/citicern.png","components/Challenges/Challenge.module.css","components/data/images/water_sample.png","components/data/images/traffic_data.jpg","components/Tasks/Task.module.css"],"names":["useStyles","makeStyles","root","border","OptionsList","label","icon","link","props","classes","React","useState","value","setValue","BottomNavigation","onChange","_","newValue","navigate","basepath","showLabels","className","map","opt","BottomNavigationAction","key","color","styles","Typography","variant","align","role","aria-label","Button","size","endIcon","src","userImg","alt","onClick","logout","title","AppBar","position","Toolbar","display","flex","alignItems","flexDirection","padding","backgroundImage","citicernImg","backgroundSize","backgroundPositionY","backgroundRepeat","marginTop","margin","Fragment","Header","style","marginBottom","FormControl","InputLabel","htmlFor","Input","id","startAdornment","InputAdornment","type","login","theme","media","height","paddingTop","ChallengeCard","c","challenge","Card","CardHeader","avatar","Avatar","backgroundColor","action","IconButton","subheader","creationDate","CardMedia","image","img","CardContent","component","description","CardActions","disableSpacing","marginLeft","points","water_sample","traffic_data","width","justifyContent","marginRight","startIcon","challenges","k","startDate","completed","progress","approved","content","Task","task","CardActionArea","gutterBottom","fontSize","CircularProgressWithLabel","done","Box","CircularProgress","top","left","bottom","right","Math","round","tasks","App","isLoggedIn","setLogin","mobileSize","useMediaQuery","ChallengeList","path","default","TaskList","Profile","BottomNav","Login","Boolean","window","location","hostname","match","createMuiTheme","palette","primary","main","deepPurple","secondary","teal","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.2573a325.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport FavoriteIcon from \"@material-ui/icons/Star\";\nimport UserIcon from \"@material-ui/icons/AccountCircle\";\nimport { navigate } from \"@reach/router\";\n\nconst useStyles = makeStyles({\n  root: {\n    border: \"1px solid lightgrey\",\n  },\n});\n\nconst OptionsList = [\n  {\n    label: \"Challenges\",\n    icon: <ListIcon />,\n    link: \"\",\n  },\n  {\n    label: \"My Tasks\",\n    icon: <FavoriteIcon />,\n    link: \"tasks\",\n  },\n  {\n    label: \"Profile\",\n    icon: <UserIcon />,\n    link: \"profile\",\n  },\n];\n\nexport default function (props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(_, newValue) => {\n        navigate(props.basepath + \"/\" + OptionsList[newValue].link);\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}\n    >\n      {OptionsList.map((opt) => (\n        <BottomNavigationAction\n          key={opt.label}\n          label={opt.label}\n          icon={opt.icon}\n          color=\"secondary\"\n        />\n      ))}\n    </BottomNavigation>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport styles from \"./Profile.module.css\";\nimport userImg from \"./user.png\";\nimport { Typography } from \"@material-ui/core\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\n\nexport default function (props) {\n  return (\n    <div className={styles[\"main\"]}>\n      <div className={styles[\"points-content\"]}>\n        <Typography variant=\"h6\" align=\"right\">\n          Total Points : 65\n          <span role=\"img\" aria-label=\"star\">\n            &#11088;\n          </span>\n        </Typography>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          size=\"small\"\n          endIcon={<ChevronRightIcon />}\n        >\n          Exchange for Rewards\n        </Button>\n      </div>\n\n      <div className={styles[\"user-content\"]}>\n        <img\n          className={styles[\"user-icon\"]}\n          src={userImg}\n          alt=\"user-icon\"\n        ></img>\n        <Typography variant=\"h6\" align=\"center\">\n          Keanu Reeves\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\">\n          Phd Student at CERN\n        </Typography>\n      </div>\n      <Button variant=\"text\" className={styles[\"buttons\"]}>\n        View Challenge History\n      </Button>\n      <Button\n        variant=\"outlined\"\n        color=\"secondary\"\n        className={styles[\"buttons\"]}\n        onClick={props.logout}\n      >\n        Logout\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function (props) {\n  const { title } = props;\n  return (\n    <AppBar position=\"static\">\n      <Toolbar variant=\"dense\">\n        <Typography variant=\"h6\" color=\"inherit\">\n          {title ? title : \"CitiCERN\"}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  FormControl,\n  InputLabel,\n  Input,\n  InputAdornment,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport PasswordIcon from \"@material-ui/icons/VpnKey\";\nimport Header from \"./Header\";\nimport citicernImg from \"./citicern.png\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flex: 1,\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    padding: 10,\n    backgroundImage: \"url('\" + citicernImg + \"')\",\n    backgroundSize: \"cover\",\n    backgroundPositionY: 60,\n    backgroundRepeat: \"no-repeat\",\n    marginTop: 70,\n  },\n  margin: {\n    margin: \"10px 20px\",\n  },\n});\n\nexport default (props) => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Header />\n      <div className={classes.root}>\n        <Typography variant=\"h6\" color=\"primary\" style={{ marginBottom: 30 }}>\n          Welocme to CitiCERN App\n        </Typography>\n        <FormControl className={classes.margin}>\n          <InputLabel htmlFor=\"input-with-icon-adornment\">\n            Enter Username\n          </InputLabel>\n          <Input\n            id=\"username\"\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <AccountCircle />\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n        <FormControl className={classes.margin}>\n          <InputLabel htmlFor=\"input-with-icon-adornment\">\n            Enter Password\n          </InputLabel>\n          <Input\n            id=\"password\"\n            type=\"password\"\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <PasswordIcon />\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={props.login}\n          style={{ marginTop: 30 }}\n        >\n          Login\n        </Button>\n      </div>\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 15,\n    border: \"1px solid lightgrey\",\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n}));\n\nexport default function ChallengeCard(props) {\n  const classes = useStyles();\n\n  const c = props.challenge;\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" style={{ backgroundColor: c.color }}>\n            {c.title ? c.title[0] : \"C\"}\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={c.title}\n        subheader={c.creationDate}\n      />\n      <CardMedia className={classes.media} image={c.img} title={c.title} />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {c.description}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>\n        <Typography style={{ marginLeft: \"auto\" }}>\n          {`Points : ${c.points}`}\n          <span role=\"img\" aria-label=\"star\">\n            &#11088;\n          </span>\n        </Typography>\n      </CardActions>\n    </Card>\n  );\n}\n","import water_sample from \"./images/water_sample.png\";\nimport traffic_data from \"./images/traffic_data.jpg\";\nexport default [\n  {\n    id: \"water_sample\",\n    color: \"#2196f3\",\n    title: \"Water sample data collection\",\n    creationDate: \"June 14, 2020\",\n    img: water_sample,\n    description:\n      \"This challenge involves collection of water samples from the Thames river at certain marked locations. The water samples should be collected at every morning for a stipulated time frame. this data can be utilized for measuring water quality by pH measurements.\",\n    points: \"7.5\",\n  },\n  {\n    id: \"traffic_data\",\n    color: \"#607d8b\",\n    title: \"Traffic data collection\",\n    creationDate: \"June 23, 2020\",\n    img: traffic_data,\n    description:\n      \"This challenge involves collection of traffic data. Understand the network surrounding IoT data to map the digital infrastructure of a space. Understand how populations flow in major urban centers to create mobility solutions. Telematic Fields. Quality Data. Transparency. Features: Telematic Fields, Quality Data.\",\n    points: \"6.0\",\n  },\n];\n","import React from \"react\";\nimport ChallengeCard from \"./ChallengeCard\";\nimport { Typography } from \"@material-ui/core\";\nimport styles from \"./Challenge.module.css\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport FIlterIcon from \"@material-ui/icons/Tune\";\nimport challenges from \"../data/challenges\";\n\nexport default function (props) {\n  return (\n    <div className={styles[\"main\"]}>\n      <div\n        style={{\n          width: \"90%\",\n          height: 50,\n          padding: 10,\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography variant=\"h6\">All Challenges</Typography>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <FIlterIcon color=\"primary\" style={{ marginRight: 10 }} />\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            size=\"small\"\n            startIcon={<AddIcon />}\n          >\n            Create\n          </Button>\n        </div>\n      </div>\n      <Scrollbars>\n        {challenges.map((c, k) => (\n          <ChallengeCard key={k} challenge={c} />\n        ))}\n      </Scrollbars>\n    </div>\n  );\n}\n","export default [\n  {\n    id: \"water_sample\",\n    color: \"#2196f3\",\n    title: \"Water sample data collection\",\n    startDate: \"June 14, 2020\",\n    completed: false,\n    progress: 30,\n  },\n  {\n    id: \"soil_sample\",\n    color: \"#a1887f\",\n    title: \"Soil mineral data collection\",\n    startDate: \"June 22, 2020\",\n    completed: true,\n    progress: 100,\n  },\n  {\n    id: \"traffic_data\",\n    color: \"#607d8b\",\n    title: \"Traffic data collection\",\n    startDate: \"June 27, 2020\",\n    approved: true,\n    completed: true,\n    progress: 100,\n  },\n];\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport DoneIcon from \"@material-ui/icons/CheckCircle\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles({\n  root: {\n    margin: 15,\n    border: \"1px solid lightgrey\",\n  },\n  content: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n});\n\nexport default function Task(props) {\n  const classes = useStyles();\n  const { task } = props;\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardContent className={classes.content}>\n          <Typography gutterBottom variant=\"body1\">\n            {task.title}\n            <br></br>\n            <span style={{ fontSize: 14 }}>{task.startDate}</span>\n          </Typography>\n          <CircularProgressWithLabel\n            value={task.progress}\n            done={task.approved}\n          />\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        {!task.completed && (\n          <Button size=\"small\" color=\"secondary\" variant=\"outlined\">\n            In progress\n          </Button>\n        )}\n        {task.completed && (\n          <Button size=\"small\" color=\"primary\">\n            Completed\n          </Button>\n        )}\n\n        {task.completed && (\n          <Button size=\"small\" color=\"default\">\n            {task.approved ? \"Approved\" : \"Pending approval\"}\n          </Button>\n        )}\n      </CardActions>\n    </Card>\n  );\n}\n\nfunction CircularProgressWithLabel(props) {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress variant=\"static\" {...props} />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        {!props.done && (\n          <Typography\n            variant=\"caption\"\n            component=\"div\"\n            color=\"textSecondary\"\n          >{`${Math.round(props.value)}%`}</Typography>\n        )}\n        {props.done && <DoneIcon color=\"secondary\" />}\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport styles from \"./Task.module.css\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport FIlterIcon from \"@material-ui/icons/Tune\";\nimport tasks from \"../data/tasks\";\nimport Task from \"./Task\";\n\nexport default function (props) {\n  return (\n    <div className={styles[\"main\"]}>\n      <div\n        style={{\n          width: \"90%\",\n          height: 50,\n          padding: 10,\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography variant=\"h6\">My Tasks</Typography>\n\n        <FIlterIcon color=\"primary\" />\n      </div>\n      <Scrollbars>\n        {tasks.map((c, k) => (\n          <Task key={k} task={c} />\n        ))}\n      </Scrollbars>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Router, navigate } from \"@reach/router\";\nimport BottomNav from \"./components/BottomNav\";\nimport styles from \"./App.module.css\";\nimport Profile from \"./components/Profile/Profile\";\nimport Header from \"./components/Header\";\nimport Login from \"./components/Login\";\nimport ChallengeList from \"./components/Challenges/ChallengeList\";\nimport TaskList from \"./components/Tasks/TaskList\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nconst basepath = \"/citicern\";\n\nfunction App() {\n  const [isLoggedIn, setLogin] = React.useState(false);\n\n  const logout = () => {\n    setLogin(false);\n  };\n\n  const login = () => {\n    setLogin(true);\n    navigate(basepath);\n  };\n  const mobileSize = useMediaQuery(\"(max-width:600px)\");\n\n  return (\n    <React.Fragment>\n      {mobileSize && (\n        <div className={styles[\"App\"]}>\n          {isLoggedIn && (\n            <React.Fragment>\n              <div className={styles[\"AppContent\"]}>\n                <Header />\n                <Router className={styles[\"AppContent\"]} basepath={basepath}>\n                  <ChallengeList path=\"\" default />\n                  <TaskList path=\"tasks\" />\n                  <Profile path=\"profile\" logout={logout} />\n                </Router>\n              </div>\n              <BottomNav basepath={basepath} />\n            </React.Fragment>\n          )}\n          {!isLoggedIn && <Login login={login}></Login>}\n        </div>\n      )}\n      {!mobileSize && (\n        <h2 style={{ margin: \"auto\", width: \"fit-content\" }}>\n          Resoulution unsupported. Please switch to a mobile device.\n        </h2>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport { deepPurple, teal } from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[900],\n    },\n    secondary: {\n      main: teal[\"800\"],\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Profile_main__2yfI1\",\"user-icon\":\"Profile_user-icon__2H3um\",\"points-content\":\"Profile_points-content__2AQjj\",\"user-content\":\"Profile_user-content__2asKu\",\"buttons\":\"Profile_buttons__23uOG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"AppContent\":\"App_AppContent__3mllT\"};","module.exports = __webpack_public_path__ + \"static/media/user.c3e7fea8.png\";","module.exports = __webpack_public_path__ + \"static/media/citicern.2e52be4a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Challenge_main__1iZuO\"};","module.exports = __webpack_public_path__ + \"static/media/water_sample.34101b16.png\";","module.exports = __webpack_public_path__ + \"static/media/traffic_data.fe79ce43.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Task_main__2vXdx\"};"],"sourceRoot":""}